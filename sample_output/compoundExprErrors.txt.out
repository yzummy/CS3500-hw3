
___Entering new scope...

TOKEN: LBRACE 		 LEXEME: {
TOKEN: IDENT 		 LEXEME: found
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
___Adding found to symbol table
TOKEN: FUNCTION 		 LEXEME: function

___Entering new scope...

TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: final
TOKEN: RPAREN 		 LEXEME: )
PARAMS -> IDENT
___Adding final to symbol table
PARAM_LIST -> PARAMS
TOKEN: LBRACE 		 LEXEME: {
TOKEN: IDENT 		 LEXEME: x
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
___Adding x to symbol table
TOKEN: INTCONST 		 LEXEME: 73
CONST -> INTCONST
FACTOR -> CONST
TOKEN: SEMICOLON 		 LEXEME: ;
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR
TOKEN: IDENT 		 LEXEME: final
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
TOKEN: FALSE 		 LEXEME: FALSE
CONST -> FALSE
FACTOR -> CONST
TOKEN: RBRACE 		 LEXEME: }
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR
EXPR_LIST -> epsilon
EXPR_LIST -> ; EXPR EXPR_LIST
COMPOUND_EXPR -> { EXPR EXPR_LIST }
FUNCTION_DEF -> FUNCTION ( PARAM_LIST ) COMPOUND_EXPR

___Exiting scope...

EXPR -> FUNCTION_DEF
EXPR -> ASSIGNMENT_EXPR
TOKEN: SEMICOLON 		 LEXEME: ;
TOKEN: PRINT 		 LEXEME: print
TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: x
TOKEN: RPAREN 		 LEXEME: )
ENTIRE_VAR -> IDENT
Line 6: Undefined identifier
