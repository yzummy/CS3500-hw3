
___Entering new scope...

TOKEN: LBRACE 		 LEXEME: {
TOKEN: IDENT 		 LEXEME: kitten
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
___Adding kitten to symbol table
TOKEN: INTCONST 		 LEXEME: 3
CONST -> INTCONST
FACTOR -> CONST
TOKEN: SEMICOLON 		 LEXEME: ;
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR
TOKEN: IDENT 		 LEXEME: second
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
___Adding second to symbol table
TOKEN: IDENT 		 LEXEME: kitten
TOKEN: ADD 		 LEXEME: +
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP -> +
TOKEN: INTCONST 		 LEXEME: 12
CONST -> INTCONST
FACTOR -> CONST
TOKEN: SEMICOLON 		 LEXEME: ;
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
ADD_OP_LIST -> ADD_OP TERM ADD_OP_LIST
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR
TOKEN: IDENT 		 LEXEME: kitten
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
TOKEN: FLOATCONST 		 LEXEME: 734.10
CONST -> FLOATCONST
FACTOR -> CONST
TOKEN: SEMICOLON 		 LEXEME: ;
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR
TOKEN: IDENT 		 LEXEME: third
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
___Adding third to symbol table
TOKEN: LPAREN 		 LEXEME: (
TOKEN: INTCONST 		 LEXEME: 7
CONST -> INTCONST
FACTOR -> CONST
TOKEN: GT 		 LEXEME: >
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> >
TOKEN: INTCONST 		 LEXEME: 9
CONST -> INTCONST
FACTOR -> CONST
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: ADD 		 LEXEME: +
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP -> +
TOKEN: LPAREN 		 LEXEME: (
TOKEN: INTCONST 		 LEXEME: 55
CONST -> INTCONST
FACTOR -> CONST
TOKEN: MULT 		 LEXEME: *
MULT_OP -> *
TOKEN: IDENT 		 LEXEME: kitten
TOKEN: RPAREN 		 LEXEME: )
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RBRACE 		 LEXEME: }
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
ADD_OP_LIST -> ADD_OP TERM ADD_OP_LIST
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR
EXPR_LIST -> epsilon
EXPR_LIST -> ; EXPR EXPR_LIST
EXPR_LIST -> ; EXPR EXPR_LIST
EXPR_LIST -> ; EXPR EXPR_LIST
COMPOUND_EXPR -> { EXPR EXPR_LIST }
EXPR -> COMPOUND_EXPR
START -> EXPR

___Exiting scope...


---- Completed parsing ----

