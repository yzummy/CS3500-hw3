
___Entering new scope...					___Entering new scope...

TOKEN: IDENT 		 LEXEME: snack_time			TOKEN: IDENT 		 LEXEME: snack_time
TOKEN: ASSIGN 		 LEXEME: =				TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon						INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR			ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
___Adding snack_time to symbol table				___Adding snack_time to symbol table
TOKEN: FUNCTION 		 LEXEME: function		TOKEN: FUNCTION 		 LEXEME: function

___Entering new scope...					___Entering new scope...

TOKEN: LPAREN 		 LEXEME: (				TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: apple				TOKEN: IDENT 		 LEXEME: apple
TOKEN: COMMA 		 LEXEME: ,				TOKEN: COMMA 		 LEXEME: ,
TOKEN: IDENT 		 LEXEME: banana				TOKEN: IDENT 		 LEXEME: banana
TOKEN: RPAREN 		 LEXEME: )				TOKEN: RPAREN 		 LEXEME: )
PARAMS -> IDENT							PARAMS -> IDENT
___Adding banana to symbol table				___Adding banana to symbol table
PARAMS -> IDENT, PARAMS						PARAMS -> IDENT, PARAMS
___Adding apple to symbol table					___Adding apple to symbol table
PARAM_LIST -> PARAMS						PARAM_LIST -> PARAMS
TOKEN: LBRACE 		 LEXEME: {				TOKEN: LBRACE 		 LEXEME: {
TOKEN: IDENT 		 LEXEME: apple				TOKEN: IDENT 		 LEXEME: apple
TOKEN: ASSIGN 		 LEXEME: =				TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon						INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR			ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
TOKEN: STRCONST 		 LEXEME: "yellow"		TOKEN: STRCONST 		 LEXEME: "yellow"
CONST -> STRCONST						CONST -> STRCONST
FACTOR -> CONST							FACTOR -> CONST
TOKEN: SEMICOLON 		 LEXEME: ;			TOKEN: SEMICOLON 		 LEXEME: ;
MULT_OP_LIST -> epsilon						MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST					TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon						ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST				SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC				ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR						EXPR -> ARITHLOGIC_EXPR
EXPR -> ASSIGNMENT_EXPR						EXPR -> ASSIGNMENT_EXPR
TOKEN: IDENT 		 LEXEME: banana				TOKEN: IDENT 		 LEXEME: banana
TOKEN: ASSIGN 		 LEXEME: =				TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon						INDEX ->  epsilon
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR			ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
TOKEN: IDENT 		 LEXEME: fruit_salad			TOKEN: IDENT 		 LEXEME: fruit_salad
TOKEN: LBRACKET 		 LEXEME: [			TOKEN: LBRACKET 		 LEXEME: [
TOKEN: LBRACKET 		 LEXEME: [			TOKEN: LBRACKET 		 LEXEME: [
TOKEN: INTCONST 		 LEXEME: 2			TOKEN: INTCONST 		 LEXEME: 2
CONST -> INTCONST						CONST -> INTCONST
FACTOR -> CONST							FACTOR -> CONST
TOKEN: RBRACKET 		 LEXEME: ]			TOKEN: RBRACKET 		 LEXEME: ]
MULT_OP_LIST -> epsilon						MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST					TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon						ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST				SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC				ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR						EXPR -> ARITHLOGIC_EXPR
TOKEN: RBRACKET 		 LEXEME: ]			TOKEN: RBRACKET 		 LEXEME: ]
TOKEN: RBRACE 		 LEXEME: }				TOKEN: RBRACE 		 LEXEME: }
SINGLE_ELEMENT -> IDENT [[ EXPR ]]				SINGLE_ELEMENT -> IDENT [[ EXPR ]]
Line 5: Undefined identifier					Line 5: Undefined identifier
